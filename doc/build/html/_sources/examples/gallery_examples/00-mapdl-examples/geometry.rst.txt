
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\gallery_examples\00-mapdl-examples\geometry.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_00-mapdl-examples_geometry.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_00-mapdl-examples_geometry.py:


.. _ref_3d_bracket_example:

绘图和网格访问
------------------------

PyMAPDL 可以加载基本的 IGES 几何图形进行分析。

本示例演示了如何将基本几何图形加载到 MAPDL 中进行分析，并演示了如何使用内置的 Python 特定绘图功能。

该示例还演示了 PyMAPDL 的一些更高级功能，包括通过 VTK 直接访问网格。

.. GENERATED FROM PYTHON SOURCE LINES 36-45

.. code-block:: Python


    import numpy as np

    from ansys.mapdl import core as pymapdl
    from ansys.mapdl.core import examples

    mapdl = pymapdl.launch_mapdl()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    E:\venv\pymapdl-venv\lib\site-packages\ansys\tools\path\path.py:1035: DeprecationWarning: This method is going to be deprecated in future versions. Please use 'get_mapdl_path'.
      warnings.warn(




.. GENERATED FROM PYTHON SOURCE LINES 47-50

Load Geometry
~~~~~~~~~~~~~
在这里，我们下载一个简单的支架 IGES 文件并将其加载到 MAPDL 中。注意 ``igesin`` 必须在 AUX15 进程中。

.. GENERATED FROM PYTHON SOURCE LINES 50-60

.. code-block:: Python


    # 注意，该方法只返回文件路径
    bracket_file = examples.download_bracket()

    # 加载支架，然后打印几何图形
    mapdl.aux15()
    mapdl.igesin(bracket_file)
    print(mapdl.geometry)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    MAPDL Selected Geometry
    Keypoints:  188
    Lines:      185
    Areas:      73
    Volumes:    1





.. GENERATED FROM PYTHON SOURCE LINES 61-66

Plotting
~~~~~~~~
PyMAPDL 使用 VTK 和 pyvista 作为绘图后端，以实现远程（使用 2021R1 及更新版本）交互式绘图。
常见的绘图方法 (``kplot`` , ``lplot`` , ``aplot`` , ``eplot`` 等) 都有相应 :func:`ansys.mapdl.core.plotting.general_plotter` 函数
的兼容命令。您可以使用各种关键字参数配置此方法。例如：

.. GENERATED FROM PYTHON SOURCE LINES 66-78

.. code-block:: Python

    mapdl.lplot(
        show_line_numbering=False,
        background="k",
        line_width=3,
        color="w",
        show_axes=False,
        show_bounds=True,
        title="",
        cpos="xz",
    )





.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_geometry_001.png
   :alt: geometry
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_geometry_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 79-80

您还可以配置一个主题，以便在多个绘图中实现一致的绘图。这些主题参数会覆盖所有未设置的关键字参数。例如

.. GENERATED FROM PYTHON SOURCE LINES 80-90

.. code-block:: Python


    my_theme = pymapdl.MapdlTheme()
    my_theme.background = "white"
    my_theme.cmap = "jet"  # colormap
    my_theme.axes.show = False
    my_theme.show_scalar_bar = False

    mapdl.aplot(theme=my_theme, quality=8)





.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_geometry_002.png
   :alt: geometry
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_geometry_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-94

Accessesing Element and Nodes Pythonically
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PyMAPDL 还支持使用 `eplot` 和 `nplot` 绘制单元和节点图。首先，使用 SOLID187 单元对支架进行网格划分。这些单元非常适合这种几何形状和静态结构分析。

.. GENERATED FROM PYTHON SOURCE LINES 94-105

.. code-block:: Python


    # 设置前处理器、单元类型和大小，并对几何体进行网格划分
    mapdl.prep7()
    mapdl.et(1, "SOLID187")
    mapdl.esize(0.075)
    mapdl.vmesh("all")

    # 打印网格特征
    print(mapdl.mesh)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ANSYS Mesh
      Number of Nodes:              50693
      Number of Elements:           32203
      Number of Element Types:      1
      Number of Node Components:    0
      Number of Element Components: 0





.. GENERATED FROM PYTHON SOURCE LINES 106-107

您可以通过 ``mesh.grid`` 属性以 VTK 网格的形式访问底层有限元网格。

.. GENERATED FROM PYTHON SOURCE LINES 107-112

.. code-block:: Python


    grid = mapdl.mesh.grid
    grid







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table style='width: 100%;'>
    <tr><th>UnstructuredGrid</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>32203</td></tr>
    <tr><td>N Points</td><td>50693</td></tr>
    <tr><td>X Bounds</td><td>-1.181e+00, 1.181e+00</td></tr>
    <tr><td>Y Bounds</td><td>-2.362e-01, 0.000e+00</td></tr>
    <tr><td>Z Bounds</td><td>-2.394e+00, 2.509e+00</td></tr>
    <tr><td>N Arrays</td><td>10</td></tr>
    </table>

    </td><td>
    <table style='width: 100%;'>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td><b>ansys_node_num</b></td><td>Points</td><td>int32</td><td>1</td><td>1.000e+00</td><td>5.069e+04</td></tr>
    <tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>5.069e+04</td></tr>
    <tr><td>origid</td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>5.069e+04</td></tr>
    <tr><td>VTKorigID</td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>5.069e+04</td></tr>
    <tr><td>ansys_elem_num</td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>3.220e+04</td></tr>
    <tr><td>ansys_real_constant</td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>1.000e+00</td></tr>
    <tr><td>ansys_material_type</td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>1.000e+00</td></tr>
    <tr><td>ansys_etype</td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>1.000e+00</td></tr>
    <tr><td>ansys_elem_type_num</td><td>Cells</td><td>int32</td><td>1</td><td>1.870e+02</td><td>1.870e+02</td></tr>
    <tr><td>vtkOriginalCellIds</td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>3.220e+04</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 113-114

这个 UnstructuredGrid 包含一个功能强大的 API，包括访问节点、单元和原始节点编号的功能，所有这些功能都可以绘制网格，并为网格添加新的属性和数据。

.. GENERATED FROM PYTHON SOURCE LINES 114-118

.. code-block:: Python


    grid.points  # same as mapdl.mesh.nodes






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    pyvista_ndarray([[-2.03111884e-01, -5.87401575e-02,  4.44426114e-04],
                     [-2.03111884e-01,  0.00000000e+00,  4.44426114e-04],
                     [-2.03111884e-01, -2.93700787e-02,  4.44426114e-04],
                     ...,
                     [ 2.95456812e-01, -1.15526255e-01,  7.79245883e-01],
                     [-3.86538371e-01, -1.22594848e-01, -3.49182457e-01],
                     [ 3.09262991e-01, -1.15288217e-01,  7.81784922e-01]])



.. GENERATED FROM PYTHON SOURCE LINES 119-120

以 VTK 格式表示的单元格

.. GENERATED FROM PYTHON SOURCE LINES 120-124

.. code-block:: Python


    grid.cells






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([   10,  1236, 15212, ..., 20943, 20945, 50050], dtype=int64)



.. GENERATED FROM PYTHON SOURCE LINES 125-126

获取网格的节点编号

.. GENERATED FROM PYTHON SOURCE LINES 126-130

.. code-block:: Python


    grid.point_data["ansys_node_num"]






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    pyvista_ndarray([    1,     2,     3, ..., 50691, 50692, 50693])



.. GENERATED FROM PYTHON SOURCE LINES 131-132

将任意数据保存到网格中

.. GENERATED FROM PYTHON SOURCE LINES 132-138

.. code-block:: Python


    # 必须根据点数调整大小
    grid.point_data["my_data"] = np.arange(grid.n_points)
    grid.point_data






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    pyvista DataSetAttributes
    Association     : POINT
    Active Scalars  : ansys_node_num
    Active Vectors  : None
    Active Texture  : None
    Active Normals  : None
    Contains arrays :
        ansys_node_num          int32      (50693,)             SCALARS
        vtkOriginalPointIds     int64      (50693,)
        origid                  int32      (50693,)
        VTKorigID               int32      (50693,)
        my_data                 int32      (50693,)



.. GENERATED FROM PYTHON SOURCE LINES 139-140

用您选择的标量绘制该网格。绘制时可以使用相同的 MapdlTheme，因为它与网格绘制器兼容。

.. GENERATED FROM PYTHON SOURCE LINES 140-154

.. code-block:: Python


    # make interesting scalars
    scalars = grid.points[:, 2]  # z coordinates

    sbar_kwargs = {"color": "black", "title": "Z Coord"}
    grid.plot(
        scalars=scalars,
        show_scalar_bar=True,
        scalar_bar_args=sbar_kwargs,
        show_edges=True,
        theme=my_theme,
    )





.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_geometry_003.png
   :alt: geometry
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_geometry_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 155-157

该网格还能以紧凑的跨平台 VTK 格式保存到磁盘中，并再次用 ``pyvista`` 或 ParaView 加载。


.. GENERATED FROM PYTHON SOURCE LINES 157-162

.. code-block:: Python


    grid.save('my_mesh.vtk')
    import pyvista
    imported_mesh = pyvista.read('my_mesh.vtk')








.. GENERATED FROM PYTHON SOURCE LINES 163-166

Stop mapdl
~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 166-167

.. code-block:: Python

    mapdl.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 28.263 seconds)


.. _sphx_glr_download_examples_gallery_examples_00-mapdl-examples_geometry.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: geometry.ipynb <geometry.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: geometry.py <geometry.py>`
