
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\gallery_examples\00-mapdl-examples\basic_dpf_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_00-mapdl-examples_basic_dpf_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_00-mapdl-examples_basic_dpf_example.py:


.. _ref_dpf_basic_example:

使用 PyMAPDL 的 DPF-Core 基本用法
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

本例改编自 `DPF-Core 基本用法示例 <https://dpf.docs.pyansys.com/version/stable/examples/00-basic/00-basic_example.html>`_ ，
展示了如何在 `DPF <https://dpf.docs.pyansys.com/>`_ 中打开结果文件，并进行一些基本的后处理。

如果安装了 Ansys 2021 R1，启动 DPF 就非常简单了，因为 DPF-Core 会负责启动后处理 Ansys 文件所需的所有服务。

首先，以 ``dpf_core`` 的形式导入 DPF-Core 模块，并导入随附的示例文件。

.. GENERATED FROM PYTHON SOURCE LINES 38-45

.. code-block:: Python

    import tempfile

    from ansys.dpf import core as dpf

    from ansys.mapdl.core import launch_mapdl
    from ansys.mapdl.core.examples import vmfiles








.. GENERATED FROM PYTHON SOURCE LINES 46-50

Create model
~~~~~~~~~~~~~~

运行 MAPDL 验证手册中的示例

.. GENERATED FROM PYTHON SOURCE LINES 50-65

.. code-block:: Python


    mapdl = launch_mapdl()

    vm5 = vmfiles["vm5"]
    output = mapdl.input(vm5)

    print(output)

    # 如果在本地工作，则无需执行以下步骤
    temp_directory = tempfile.gettempdir()
    print(f'默认临时文件地址： {temp_directory}')

    # 将 RST 文件下载到当前文件夹
    rst_path = mapdl.download_result(temp_directory)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    C:\Users\ff\AppData\Local\Programs\Python\Python310\lib\site-packages\ansys\tools\path\path.py:818: DeprecationWarning: This method is going to be deprecated in future versions. Please use 'get_mapdl_path'.
      warnings.warn(

     /INPUT FILE= C:\Users\ff\AppData\Local\Programs\Python\Python310\lib\site-packages\ansys\mapdl\core\examples\verif\vm5.dat  LINE=       0
     ANSYS MEDIA REL. 2023R1 (11/04/2022) REF. VERIF. MANUAL: REL. 2023R1

     *** VERIFICATION RUN - CASE VM5                              ***  OPTION=  4


     /SHOW SWITCH PLOTS TO  JPEG        - RASTER MODE.
       *****MAPDL VERIFICATION RUN ONLY*****
         DO NOT USE RESULTS FOR PRODUCTION

              ***** MAPDL ANALYSIS DEFINITION (PREP7) *****

     TITLE= 
      VM5, LATERALLY LOADED TAPERED SUPPORT STRUCTURE (QUAD. ELEMENTS)             


     C***     MECHANICS OF SOLIDS, CRANDALL AND DAHL, 1959, PAGE 342, PROB. 7.18


     C***          USING PLANE42 ELEMENTS



     PERFORM A STATIC ANALYSIS
      THIS WILL BE A NEW ANALYSIS

     ELEMENT TYPE          1 IS PLANE182     2-D 4-NODE PLANE STRS SOLID 
      KEYOPT( 1- 6)=        2      0      3        0      0      0
      KEYOPT( 7-12)=        0      0      0        0      0      0
      KEYOPT(13-18)=        0      0      0        0      0      0

     CURRENT NODAL DOF SET IS  UX    UY  
      TWO-DIMENSIONAL MODEL

     REAL CONSTANT SET          1  ITEMS   1 TO   6
        2.0000       0.0000       0.0000       0.0000       0.0000       0.0000    

     MATERIAL          1     EX   =  0.3000000E+08  

     MATERIAL          1     NUXY =   0.000000      

     NODE          1  KCS=      0  X,Y,Z=  25.000       0.0000       0.0000     

     NODE          7  KCS=      0  X,Y,Z=  75.000       0.0000       0.0000     

     FILL       5 POINTS BETWEEN NODE       1 AND NODE       7
      START WITH NODE       2 AND INCREMENT BY       1

     NODE          8  KCS=      0  X,Y,Z=  25.000      -3.0000       0.0000     

     NODE         14  KCS=      0  X,Y,Z=  75.000      -9.0000       0.0000     

     FILL       5 POINTS BETWEEN NODE       8 AND NODE      14
      START WITH NODE       9 AND INCREMENT BY       1

     ELEMENT      1       2      1      8      9

     GENERATE       6 TOTAL SETS OF ELEMENTS WITH NODE INCREMENT OF         1
       SET IS SELECTED ELEMENTS IN RANGE         1 TO         1 IN STEPS OF       1

     MAXIMUM ELEMENT NUMBER=         6

     SELECT       FOR ITEM=LOC  COMPONENT=X     BETWEEN  75.000     AND   75.000    
       KABS=  0.  TOLERANCE= 0.375000    

              2  NODES (OF         14  DEFINED) SELECTED BY  NSEL  COMMAND.

     SPECIFIED CONSTRAINT UX   FOR SELECTED NODES            1 TO          14 BY           1
     REAL=  0.00000000       IMAG=  0.00000000    
     ADDITIONAL DOFS=  UY  

     ALL SELECT   FOR ITEM=NODE COMPONENT=    
      IN RANGE         1 TO         14 STEP          1

             14  NODES (OF         14  DEFINED) SELECTED BY NSEL  COMMAND.

     SPECIFIED NODAL LOAD FY   FOR SELECTED NODES         1 TO        1 BY        1
      REAL= -4000.00000       IMAG=  0.00000000    


     ***** ROUTINE COMPLETED *****  CP =         0.000



     *****  MAPDL SOLUTION ROUTINE  *****

     PRINT BASI ITEMS WITH A FREQUENCY OF      1
       FOR ALL APPLICABLE ENTITIES

     /OUTPUT FILE=         

    默认临时文件地址： C:\Users\ff\AppData\Local\Temp




.. GENERATED FROM PYTHON SOURCE LINES 66-75

接下来，打开生成的 RST 文件并打印出 :class:`Model <ansys.dpf.core.model.Model>` 对象。
:class:`Model <ansys.dpf.core.model.Model>` 类通过跟踪结果文件使用的运算符和数据源，有助于组织结果的访问方法。

打印模型显示：

- Analysis type 分析类型
- Available results 可用结果
- Size of the mesh 网格尺寸
- Number of results 结果数量

.. GENERATED FROM PYTHON SOURCE LINES 77-79

如果要使用远程服务器，可能需要先上传 ``RST`` 文件，然后再使用它。
然后你就可以创建 :class:`DPF Model <ansys.dpf.core.model.Model>` 。

.. GENERATED FROM PYTHON SOURCE LINES 79-90

.. code-block:: Python


    dpf.core.make_tmp_dir_server(dpf.SERVER)

    if dpf.SERVER.local_server:
        model = dpf.Model(rst_path)
    else:
        server_file_path = dpf.upload_file_in_tmp_folder(rst_path)
        model = dpf.Model(server_file_path)

    print(model)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    DPF Model
    ------------------------------
    Static analysis
    Unit system: SI: m, kg, s, V, A, K
    Physics Type: Mechanical
    Available results:
         -  displacement: Nodal Displacement
         -  reaction_force: Nodal Force   
         -  element_nodal_forces: ElementalNodal Element nodal Forces
         -  stress: ElementalNodal Stress 
         -  elemental_volume: Elemental Volume
         -  stiffness_matrix_energy: Elemental Energy-stiffness matrix
         -  artificial_hourglass_energy: Elemental Hourglass Energy
         -  thermal_dissipation_energy: Elemental thermal dissipation energy
         -  kinetic_energy: Elemental Kinetic Energy
         -  co_energy: Elemental co-energy
         -  incremental_energy: Elemental incremental energy
         -  elastic_strain: ElementalNodal Strain
         -  thermal_strain: ElementalNodal Thermal Strains
         -  thermal_strains_eqv: ElementalNodal Thermal Strains eqv
         -  swelling_strains: ElementalNodal Swelling Strains
         -  structural_temperature: ElementalNodal Temperature
    ------------------------------
    DPF  Meshed Region: 
      33 nodes 
      6 elements 
      Unit:  
      With shell (2D) elements, shell (3D) elements
    ------------------------------
    DPF  Time/Freq Support: 
      Number of sets: 1 
    Cumulative     Time (s)       LoadStep       Substep         
    1              1.000000       1              1               





.. GENERATED FROM PYTHON SOURCE LINES 91-95

Model Metadata
~~~~~~~~~~~~~~
可以通过引用模型的 :attr:`metadata <ansys.dpf.core.model.Model.metadata>` 属性从模型中提取特定元数据。
例如，只打印 :attr:`result_info <ansys.dpf.core.model.Metadata.result_info>` 属性：

.. GENERATED FROM PYTHON SOURCE LINES 95-99

.. code-block:: Python


    metadata = model.metadata
    print(metadata.result_info)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Static analysis
    Unit system: SI: m, kg, s, V, A, K
    Physics Type: Mechanical
    Available results:
         -  displacement: Nodal Displacement
         -  reaction_force: Nodal Force   
         -  element_nodal_forces: ElementalNodal Element nodal Forces
         -  stress: ElementalNodal Stress 
         -  elemental_volume: Elemental Volume
         -  stiffness_matrix_energy: Elemental Energy-stiffness matrix
         -  artificial_hourglass_energy: Elemental Hourglass Energy
         -  thermal_dissipation_energy: Elemental thermal dissipation energy
         -  kinetic_energy: Elemental Kinetic Energy
         -  co_energy: Elemental co-energy
         -  incremental_energy: Elemental incremental energy
         -  elastic_strain: ElementalNodal Strain
         -  thermal_strain: ElementalNodal Thermal Strains
         -  thermal_strains_eqv: ElementalNodal Thermal Strains eqv
         -  swelling_strains: ElementalNodal Swelling Strains
         -  structural_temperature: ElementalNodal Temperature





.. GENERATED FROM PYTHON SOURCE LINES 100-101

打印 :class:`mesh region（网格区域） <ansys.dpf.core.meshed_region.MeshedRegion>` ：

.. GENERATED FROM PYTHON SOURCE LINES 101-104

.. code-block:: Python


    print(metadata.meshed_region)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    DPF  Meshed Region: 
      33 nodes 
      6 elements 
      Unit:  
      With shell (2D) elements, shell (3D) elements




.. GENERATED FROM PYTHON SOURCE LINES 105-106

要打印结果的时间或频率，请使用 :class:`time_freq_support <ansys.dpf.core.time_freq_support.TimeFreqSupport>`：

.. GENERATED FROM PYTHON SOURCE LINES 106-109

.. code-block:: Python


    print(metadata.time_freq_support)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    DPF  Time/Freq Support: 
      Number of sets: 1 
    Cumulative     Time (s)       LoadStep       Substep         
    1              1.000000       1              1               





.. GENERATED FROM PYTHON SOURCE LINES 110-118

Extracting Displacement Results
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
可以通过 :class:`Results <ansys.dpf.core.results.Results>` 属性访问模型的所有结果，
该属性返回 :class:`ansys.dpf.core.results.Results` 类。该类包含特定结果文件可用的 DPF 结果运算符，使用 ``print(results)`` 打印对象时会列出这些运算符。

这里，:class:`displacement <ansys.dpf.core.operators.result.displacement.displacement>` 运算符与 :class:`DataSources（数据源） <ansys.dpf.core.data_sources.DataSources>` 相联，
这会在运行 :class:`results.displacement() <ansys.dpf.core.operators.result.displacement.displacement>` 时自动进行。
默认情况下，:class:`displacement <ansys.dpf.core.operators.result.displacement.displacement>` 运算符连接到第一个结果集，对于此静态结果而言，它是唯一的结果。

.. GENERATED FROM PYTHON SOURCE LINES 118-127

.. code-block:: Python


    results = model.results
    displacements = results.displacement()
    fields = displacements.outputs.fields_container()

    # 最后，提取位移场数据：
    disp = fields[0].data
    disp





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    DPFArray([[-4.38851905e-03, -8.90023185e-03,  0.00000000e+00],
              [-6.69683824e-03, -2.11175625e-02,  0.00000000e+00],
              [ 4.17859820e-03, -2.11057663e-02,  0.00000000e+00],
              [ 3.30502628e-03, -8.89049154e-03,  0.00000000e+00],
              [-5.53644478e-03, -1.42612890e-02,  0.00000000e+00],
              [-1.20792265e-03, -2.11145211e-02,  0.00000000e+00],
              [ 3.82436228e-03, -1.42559816e-02,  0.00000000e+00],
              [-4.90502176e-04, -8.89780417e-03,  0.00000000e+00],
              [-2.17801557e-03, -2.15151386e-03,  0.00000000e+00],
              [ 1.82830253e-03, -2.15124124e-03,  0.00000000e+00],
              [-3.27160527e-03, -4.90756375e-03,  0.00000000e+00],
              [ 2.63019818e-03, -4.89004246e-03,  0.00000000e+00],
              [-8.95838911e-05, -2.15503538e-03,  0.00000000e+00],
              [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
              [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
              [-1.07316284e-03, -5.41584305e-04,  0.00000000e+00],
              [ 9.59021573e-04, -5.64429271e-04,  0.00000000e+00],
              [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
              [-1.10106159e-02, -6.60224200e-02,  0.00000000e+00],
              [-1.20838957e-02, -9.90994350e-02,  0.00000000e+00],
              [ 3.61860276e-04, -9.88721453e-02,  0.00000000e+00],
              [ 3.23207196e-03, -6.59380057e-02,  0.00000000e+00],
              [-1.17563515e-02, -8.18061655e-02,  0.00000000e+00],
              [-5.82220244e-03, -9.89754713e-02,  0.00000000e+00],
              [ 2.08036965e-03, -8.18682795e-02,  0.00000000e+00],
              [-3.87518431e-03, -6.59854725e-02,  0.00000000e+00],
              [-8.99066833e-03, -3.98506343e-02,  0.00000000e+00],
              [ 4.27062988e-03, -3.98210573e-02,  0.00000000e+00],
              [-1.00608366e-02, -5.19510806e-02,  0.00000000e+00],
              [ 3.92601832e-03, -5.19563394e-02,  0.00000000e+00],
              [-2.31550786e-03, -3.98370089e-02,  0.00000000e+00],
              [-7.85485340e-03, -2.95981071e-02,  0.00000000e+00],
              [ 4.34038437e-03, -2.95942670e-02,  0.00000000e+00]])



.. GENERATED FROM PYTHON SOURCE LINES 128-132

Plot displacements
~~~~~~~~~~~~~~~~~~

您可以使用以下方法打印上面的位移场：

.. GENERATED FROM PYTHON SOURCE LINES 132-135

.. code-block:: Python


    model.metadata.meshed_region.plot(fields, cpos="xy")




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_basic_dpf_example_001.png
   :alt: basic dpf example
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_basic_dpf_example_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 136-138

或使用


.. GENERATED FROM PYTHON SOURCE LINES 138-141

.. code-block:: Python


    fields[0].plot(cpos="xy")




.. image-sg:: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_basic_dpf_example_002.png
   :alt: basic dpf example
   :srcset: /examples/gallery_examples/00-mapdl-examples/images/sphx_glr_basic_dpf_example_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 142-143

如果您在网格或结果上使用了 :class:`ansys.dpf.core.scoping.Scoping` 方法，这种方法会特别有用。

.. GENERATED FROM PYTHON SOURCE LINES 146-151

Close session
~~~~~~~~~~~~~~

Stop MAPDL session.


.. GENERATED FROM PYTHON SOURCE LINES 151-152

.. code-block:: Python

    mapdl.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 9.507 seconds)


.. _sphx_glr_download_examples_gallery_examples_00-mapdl-examples_basic_dpf_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: basic_dpf_example.ipynb <basic_dpf_example.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: basic_dpf_example.py <basic_dpf_example.py>`
